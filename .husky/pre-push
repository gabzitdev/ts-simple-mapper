#!/bin/sh
. "$(dirname -- "$0")/_/husky.sh"

npm run test:coverage

# Check if any tags are being pushed
TAG_REFS=$(git for-each-ref --format='%(refname:short)' refs/tags --sort=-creatordate)
if [ -z "$TAG_REFS" ]; then
  # No tags exist, allow the push
  exit 0
fi

# Block pushing all tags at once
if echo "$GIT_PUSH_COMMAND" | grep -q -- "--tags"; then
  echo "‚ùå Error: Pushing all tags via '--tags' is not allowed."
  echo "üëâ Please push a single tag like: git push origin vX.Y.Z"
  echo "‚ùå -----------------------------------------------------"
  exit 1
fi

# Get the list of tags being pushed
PUSHED_TAGS=$(git push --dry-run "$@" 2>/dev/null | grep '^ *[^ ]* *refs/tags/' || true)
TAG_COUNT=$(echo "$PUSHED_TAGS" | wc -l)

if [ "$TAG_COUNT" -gt 1 ]; then
  echo "‚ùå Error: Pushing multiple tags at once is not allowed."
  echo "üëâ Please push one tag at a time like: git push origin vX.Y.Z"
  echo "   Detected $TAG_COUNT tags being pushed."
  echo "‚ùå ----------------------------------------------------------"
  exit 1
fi

# Use `git for-each-ref` to find pushed tag ref
TAG_REF=$(echo "$TAG_REFS" | head -n1)

if [ -z "$TAG_REF" ]; then
  echo "‚ÑπÔ∏è No tag detected. Allowing push."
  exit 0
fi

echo "üîç Detected tag being pushed: $TAG_REF"

# Remove 'v' prefix for comparison
TAG_VERSION="${TAG_REF#v}"
TAG_VERSION=$(echo "$TAG_VERSION" | xargs)

# Get version from package.json
PKG_VERSION=$(node -p "require('./package.json').version" | xargs)

echo "üì¶ package.json version: $PKG_VERSION"
echo "üî¢ Tag version: $TAG_VERSION"

# Compare
if [ "$TAG_VERSION" != "$PKG_VERSION" ]; then
  echo "‚ùå Error: Version mismatch!"
  echo "   Tag:         $TAG_VERSION"
  echo "   package.json $PKG_VERSION"
  echo "‚ùå -----------------------------------------------------"
  exit 1
fi

echo "‚úÖ Tag version matches package.json. Proceeding with push."
echo "‚úÖ -------------------------------------------------------"
exit 0
